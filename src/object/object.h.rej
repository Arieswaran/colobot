diff a/src/object/object.h b/src/object/object.h	(rejected hunks)
@@ -19,6 +19,7 @@ class CDisplayText;
 class CRobotMain;
 class CBotVar;
 class CScript;
+class CRecorder;
 
 enum CameraType;
 enum Sound;
@@ -31,265 +32,379 @@ enum D3DShadowType;
 
 #define OBJECTMAXPART      40
 #define MAXCRASHSPHERE     40
-#define OBJECTMAXDESELLIST 10
-#define OBJECTMAXINFO      10
+#define MAXCRASHLINE       20
 #define OBJECTMAXCMDLINE   20
 
 enum ObjectType
 {
-   OBJECT_NULL         = 0,    // objet détruit
-   OBJECT_FIX          = 1,    // décor fixe
-   OBJECT_PORTICO      = 2,    // portique
-   OBJECT_BASE         = 3,    // grande base principale
-   OBJECT_DERRICK      = 4,    // derrick fixe
-   OBJECT_FACTORY      = 5,    // usine fixe
-   OBJECT_STATION      = 6,    // station de recharge
-   OBJECT_CONVERT      = 7,    // station de transformation
-   OBJECT_REPAIR       = 8,    // réparation
-   OBJECT_TOWER        = 9,    // tour de défense
-   OBJECT_NEST         = 10,   // nid
-   OBJECT_RESEARCH     = 11,   // centre de recherches
-   OBJECT_RADAR        = 12,   // radar
-   OBJECT_ENERGY       = 13,   // centrale d'énergie
-   OBJECT_LABO         = 14,   // laboratoire d'analyse pour insectes
-   OBJECT_NUCLEAR      = 15,   // centrale nucléaire
-   OBJECT_START        = 16,   // départ
-   OBJECT_END          = 17,   // arrivée
-   OBJECT_INFO         = 18,   // borne d'information
-   OBJECT_PARA         = 19,   // paratonnerre
-   OBJECT_TARGET1      = 20,   // portique cible
-   OBJECT_TARGET2      = 21,   // centre cible
-   OBJECT_SAFE         = 22,   // coffre fort
-   OBJECT_HUSTON       = 23,   // centre de contrôle
-   OBJECT_DESTROYER    = 24,   // destructeur
-   OBJECT_FRET         = 30,   // transportable
-   OBJECT_STONE        = 31,   // pierre
-   OBJECT_URANIUM      = 32,   // uranium
-   OBJECT_METAL        = 33,   // métal
-   OBJECT_POWER        = 34,   // pile normale
-   OBJECT_ATOMIC       = 35,   // pile atomique
-   OBJECT_BULLET       = 36,   // boulet
-   OBJECT_BBOX         = 37,   // black-box
-   OBJECT_TNT          = 38,   // caisse de TNT
-   OBJECT_SCRAP1       = 40,   // déchet métallique
-   OBJECT_SCRAP2       = 41,   // déchet métallique
-   OBJECT_SCRAP3       = 42,   // déchet métallique
-   OBJECT_SCRAP4       = 43,   // déchet plastique
-   OBJECT_SCRAP5       = 44,   // déchet plastique
-   OBJECT_MARKPOWER    = 50,   // marque pile en sous-sol
-   OBJECT_MARKSTONE    = 51,   // marque minerai en sous-sol
-   OBJECT_MARKURANIUM  = 52,   // marque uranium en sous-sol
-   OBJECT_MARKKEYa     = 53,   // marque clé en sous-sol
-   OBJECT_MARKKEYb     = 54,   // marque clé en sous-sol
-   OBJECT_MARKKEYc     = 55,   // marque clé en sous-sol
-   OBJECT_MARKKEYd     = 56,   // marque clé en sous-sol
-   OBJECT_BOMB         = 60,   // bombe
-   OBJECT_WINFIRE      = 61,   // feu d'artifice
-   OBJECT_SHOW         = 62,   // montre un lieu
-   OBJECT_BAG          = 63,   // sac de survie
-   OBJECT_PLANT0       = 70,   // plante 0
-   OBJECT_PLANT1       = 71,   // plante 1
-   OBJECT_PLANT2       = 72,   // plante 2
-   OBJECT_PLANT3       = 73,   // plante 3
-   OBJECT_PLANT4       = 74,   // plante 4
-   OBJECT_PLANT5       = 75,   // plante 5
-   OBJECT_PLANT6       = 76,   // plante 6
-   OBJECT_PLANT7       = 77,   // plante 7
-   OBJECT_PLANT8       = 78,   // plante 8
-   OBJECT_PLANT9       = 79,   // plante 9
-   OBJECT_PLANT10      = 80,   // plante 10
-   OBJECT_PLANT11      = 81,   // plante 11
-   OBJECT_PLANT12      = 82,   // plante 12
-   OBJECT_PLANT13      = 83,   // plante 13
-   OBJECT_PLANT14      = 84,   // plante 14
-   OBJECT_PLANT15      = 85,   // plante 15
-   OBJECT_PLANT16      = 86,   // plante 16
-   OBJECT_PLANT17      = 87,   // plante 17
-   OBJECT_PLANT18      = 88,   // plante 18
-   OBJECT_PLANT19      = 89,   // plante 19
-   OBJECT_TREE0        = 90,   // arbre 0
-   OBJECT_TREE1        = 91,   // arbre 1
-   OBJECT_TREE2        = 92,   // arbre 2
-   OBJECT_TREE3        = 93,   // arbre 3
-   OBJECT_TREE4        = 94,   // arbre 4
-   OBJECT_TREE5        = 95,   // arbre 5
-   OBJECT_TREE6        = 96,   // arbre 6
-   OBJECT_TREE7        = 97,   // arbre 7
-   OBJECT_TREE8        = 98,   // arbre 8
-   OBJECT_TREE9        = 99,   // arbre 9
-   OBJECT_MOBILEwt     = 100,  // wheel-trainer
-   OBJECT_MOBILEtt     = 101,  // track-trainer
-   OBJECT_MOBILEft     = 102,  // fly-trainer
-   OBJECT_MOBILEit     = 103,  // insect-trainer
-   OBJECT_MOBILEwa     = 110,  // wheel-arm
-   OBJECT_MOBILEta     = 111,  // track-arm
-   OBJECT_MOBILEfa     = 112,  // fly-arm
-   OBJECT_MOBILEia     = 113,  // insect-arm
-   OBJECT_MOBILEwc     = 120,  // wheel-cannon
-   OBJECT_MOBILEtc     = 121,  // track-cannon
-   OBJECT_MOBILEfc     = 122,  // fly-cannon
-   OBJECT_MOBILEic     = 123,  // insect-cannon
-   OBJECT_MOBILEwi     = 130,  // wheel-insect-cannon
-   OBJECT_MOBILEti     = 131,  // track-insect-cannon
-   OBJECT_MOBILEfi     = 132,  // fly-insect-cannon
-   OBJECT_MOBILEii     = 133,  // insect-insect-cannon
-   OBJECT_MOBILEws     = 140,  // wheel-search
-   OBJECT_MOBILEts     = 141,  // track-search
-   OBJECT_MOBILEfs     = 142,  // fly-search
-   OBJECT_MOBILEis     = 143,  // insect-search
-   OBJECT_MOBILErt     = 200,  // roller-terraform
-   OBJECT_MOBILErc     = 201,  // roller-canon
-   OBJECT_MOBILErr     = 202,  // roller-recover
-   OBJECT_MOBILErs     = 203,  // roller-shield
-   OBJECT_MOBILEsa     = 210,  // sous-marin
-   OBJECT_MOBILEtg     = 211,  // cible d'exercice
-   OBJECT_MOBILEdr     = 212,  // robot de dessin
-   OBJECT_WAYPOINT     = 250,  // chemin
-   OBJECT_FLAGb        = 260,  // drapeau bleu
-   OBJECT_FLAGr        = 261,  // drapeau rouge
-   OBJECT_FLAGg        = 262,  // drapeau vert
-   OBJECT_FLAGy        = 263,  // drapeau jaune
-   OBJECT_FLAGv        = 264,  // drapeau violet
-   OBJECT_KEYa         = 270,  // clé a
-   OBJECT_KEYb         = 271,  // clé b
-   OBJECT_KEYc         = 272,  // clé c
-   OBJECT_KEYd         = 273,  // clé d
-   OBJECT_HUMAN        = 300,  // homme
-   OBJECT_TOTO         = 301,  // toto
-   OBJECT_TECH         = 302,  // technicien
-   OBJECT_BARRIER0     = 400,  // barrière
-   OBJECT_BARRIER1     = 401,  // barrière
-   OBJECT_BARRIER2     = 402,  // barrière
-   OBJECT_BARRIER3     = 403,  // barrière
-   OBJECT_BARRIER4     = 404,  // barrière
-   OBJECT_MOTHER       = 500,  // mère pondeuse
-   OBJECT_EGG          = 501,  // oeuf
-   OBJECT_ANT          = 502,  // fourmi
-   OBJECT_SPIDER       = 503,  // araignée
-   OBJECT_BEE          = 504,  // abeille
-   OBJECT_WORM         = 505,  // ver
-   OBJECT_RUINmobilew1 = 600,  // ruine 1
-   OBJECT_RUINmobilew2 = 601,  // ruine 1
-   OBJECT_RUINmobilet1 = 602,  // ruine 2
-   OBJECT_RUINmobilet2 = 603,  // ruine 2
-   OBJECT_RUINmobiler1 = 604,  // ruine 3
-   OBJECT_RUINmobiler2 = 605,  // ruine 3
-   OBJECT_RUINfactory  = 606,  // ruine 4
-   OBJECT_RUINdoor     = 607,  // ruine 5
-   OBJECT_RUINsupport  = 608,  // ruine 6
-   OBJECT_RUINradar    = 609,  // ruine 7
-   OBJECT_RUINconvert  = 610,  // ruine 8
-   OBJECT_RUINbase     = 611,  // ruine 9
-   OBJECT_RUINhead     = 612,  // ruine 10
-   OBJECT_TEEN0        = 620,  // jouet
-   OBJECT_TEEN1        = 621,  // jouet
-   OBJECT_TEEN2        = 622,  // jouet
-   OBJECT_TEEN3        = 623,  // jouet
-   OBJECT_TEEN4        = 624,  // jouet
-   OBJECT_TEEN5        = 625,  // jouet
-   OBJECT_TEEN6        = 626,  // jouet
-   OBJECT_TEEN7        = 627,  // jouet
-   OBJECT_TEEN8        = 628,  // jouet
-   OBJECT_TEEN9        = 629,  // jouet
-   OBJECT_TEEN10       = 630,  // jouet
-   OBJECT_TEEN11       = 631,  // jouet
-   OBJECT_TEEN12       = 632,  // jouet
-   OBJECT_TEEN13       = 633,  // jouet
-   OBJECT_TEEN14       = 634,  // jouet
-   OBJECT_TEEN15       = 635,  // jouet
-   OBJECT_TEEN16       = 636,  // jouet
-   OBJECT_TEEN17       = 637,  // jouet
-   OBJECT_TEEN18       = 638,  // jouet
-   OBJECT_TEEN19       = 639,  // jouet
-   OBJECT_TEEN20       = 640,  // jouet
-   OBJECT_TEEN21       = 641,  // jouet
-   OBJECT_TEEN22       = 642,  // jouet
-   OBJECT_TEEN23       = 643,  // jouet
-   OBJECT_TEEN24       = 644,  // jouet
-   OBJECT_TEEN25       = 645,  // jouet
-   OBJECT_TEEN26       = 646,  // jouet
-   OBJECT_TEEN27       = 647,  // jouet
-   OBJECT_TEEN28       = 648,  // jouet
-   OBJECT_TEEN29       = 649,  // jouet
-   OBJECT_TEEN30       = 650,  // jouet
-   OBJECT_TEEN31       = 651,  // jouet
-   OBJECT_TEEN32       = 652,  // jouet
-   OBJECT_TEEN33       = 653,  // jouet
-   OBJECT_TEEN34       = 654,  // jouet
-   OBJECT_TEEN35       = 655,  // jouet
-   OBJECT_TEEN36       = 656,  // jouet
-   OBJECT_TEEN37       = 657,  // jouet
-   OBJECT_TEEN38       = 658,  // jouet
-   OBJECT_TEEN39       = 659,  // jouet
-   OBJECT_TEEN40       = 660,  // jouet
-   OBJECT_TEEN41       = 661,  // jouet
-   OBJECT_TEEN42       = 662,  // jouet
-   OBJECT_TEEN43       = 663,  // jouet
-   OBJECT_TEEN44       = 664,  // jouet
-   OBJECT_TEEN45       = 665,  // jouet
-   OBJECT_TEEN46       = 666,  // jouet
-   OBJECT_TEEN47       = 667,  // jouet
-   OBJECT_TEEN48       = 668,  // jouet
-   OBJECT_TEEN49       = 669,  // jouet
-   OBJECT_QUARTZ0      = 700,  // quartz 0
-   OBJECT_QUARTZ1      = 701,  // quartz 1
-   OBJECT_QUARTZ2      = 702,  // quartz 2
-   OBJECT_QUARTZ3      = 703,  // quartz 3
-   OBJECT_QUARTZ4      = 704,  // quartz 4
-   OBJECT_QUARTZ5      = 705,  // quartz 5
-   OBJECT_QUARTZ6      = 706,  // quartz 6
-   OBJECT_QUARTZ7      = 707,  // quartz 7
-   OBJECT_QUARTZ8      = 708,  // quartz 8
-   OBJECT_QUARTZ9      = 709,  // quartz 9
-   OBJECT_ROOT0        = 710,  // racine 0
-   OBJECT_ROOT1        = 711,  // racine 1
-   OBJECT_ROOT2        = 712,  // racine 2
-   OBJECT_ROOT3        = 713,  // racine 3
-   OBJECT_ROOT4        = 714,  // racine 4
-   OBJECT_ROOT5        = 715,  // racine 5
-   OBJECT_ROOT6        = 716,  // racine 6
-   OBJECT_ROOT7        = 717,  // racine 7
-   OBJECT_ROOT8        = 718,  // racine 8
-   OBJECT_ROOT9        = 719,  // racine 9
-   OBJECT_SEAWEED0     = 720,  // algue 0
-   OBJECT_SEAWEED1     = 721,  // algue 1
-   OBJECT_SEAWEED2     = 722,  // algue 2
-   OBJECT_SEAWEED3     = 723,  // algue 3
-   OBJECT_SEAWEED4     = 724,  // algue 4
-   OBJECT_SEAWEED5     = 725,  // algue 5
-   OBJECT_SEAWEED6     = 726,  // algue 6
-   OBJECT_SEAWEED7     = 727,  // algue 7
-   OBJECT_SEAWEED8     = 728,  // algue 8
-   OBJECT_SEAWEED9     = 729,  // algue 9
-   OBJECT_MUSHROOM0    = 730,  // champignon 0
-   OBJECT_MUSHROOM1    = 731,  // champignon 1
-   OBJECT_MUSHROOM2    = 732,  // champignon 2
-   OBJECT_MUSHROOM3    = 733,  // champignon 3
-   OBJECT_MUSHROOM4    = 734,  // champignon 4
-   OBJECT_MUSHROOM5    = 735,  // champignon 5
-   OBJECT_MUSHROOM6    = 736,  // champignon 6
-   OBJECT_MUSHROOM7    = 737,  // champignon 7
-   OBJECT_MUSHROOM8    = 738,  // champignon 8
-   OBJECT_MUSHROOM9    = 739,  // champignon 9
-   OBJECT_APOLLO1      = 900,  // apollo lem
-   OBJECT_APOLLO2      = 901,  // apollo jeep
-   OBJECT_APOLLO3      = 902,  // apollo flag
-   OBJECT_APOLLO4      = 903,  // apollo module
-   OBJECT_APOLLO5      = 904,  // apollo antenna
+   OBJECT_NULL         = 0,    // objet détruit
+   OBJECT_FIX          = 1,    // décor fixe
+   OBJECT_PIECE        = 2,    // pièce de voiture
+   OBJECT_FACTORY1     = 10,   // usine fixe
+   OBJECT_FACTORY2     = 11,   // usine fixe
+   OBJECT_FACTORY3     = 12,   // usine fixe
+   OBJECT_FACTORY4     = 13,   // usine fixe
+   OBJECT_FACTORY5     = 14,   // usine fixe
+   OBJECT_FACTORY6     = 15,   // usine fixe
+   OBJECT_FACTORY7     = 16,   // usine fixe
+   OBJECT_FACTORY8     = 17,   // usine fixe
+   OBJECT_FACTORY9     = 18,   // usine fixe
+   OBJECT_FACTORY10    = 19,   // usine fixe
+   OBJECT_FACTORY11    = 20,   // usine fixe
+   OBJECT_FACTORY12    = 21,   // usine fixe
+   OBJECT_FACTORY13    = 22,   // usine fixe
+   OBJECT_FACTORY14    = 23,   // usine fixe
+   OBJECT_FACTORY15    = 24,   // usine fixe
+   OBJECT_FACTORY16    = 25,   // usine fixe
+   OBJECT_FACTORY17    = 26,   // usine fixe
+   OBJECT_FACTORY18    = 27,   // usine fixe
+   OBJECT_FACTORY19    = 28,   // usine fixe
+   OBJECT_FACTORY20    = 29,   // usine fixe
+   OBJECT_TOWER        = 30,   // tour de défense
+   OBJECT_NUCLEAR      = 31,   // centrale nucléaire
+   OBJECT_START        = 32,   // départ
+   OBJECT_END          = 33,   // arrivée
+   OBJECT_PARA         = 34,   // paratonnerre
+   OBJECT_SUPPORT      = 35,   // présentoir
+   OBJECT_DOCK         = 36,   // portique
+   OBJECT_REMOTE       = 37,   // télécommande
+   OBJECT_STAND        = 38,   // tribune
+   OBJECT_GENERATOR    = 39,   // générateur
+   OBJECT_DOOR1        = 40,   // porte 1
+   OBJECT_DOOR2        = 41,   // porte 2
+   OBJECT_DOOR3        = 42,   // porte 3
+   OBJECT_DOOR4        = 43,   // porte 4
+   OBJECT_DOOR5        = 44,   // porte 5
+   OBJECT_COMPUTER     = 45,   // ordi
+   OBJECT_REPAIR       = 46,   // center de réparation
+   OBJECT_SWEET        = 47,   // maisonette
+   OBJECT_ROADSIGN1    = 60,   // signal 1
+   OBJECT_ROADSIGN2    = 61,   // signal 2
+   OBJECT_ROADSIGN3    = 62,   // signal 3
+   OBJECT_ROADSIGN4    = 63,   // signal 4
+   OBJECT_ROADSIGN5    = 64,   // signal 5
+   OBJECT_ROADSIGN6    = 65,   // signal 6
+   OBJECT_ROADSIGN7    = 66,   // signal 7
+   OBJECT_ROADSIGN8    = 67,   // signal 8
+   OBJECT_ROADSIGN9    = 68,   // signal 9
+   OBJECT_ROADSIGN10   = 69,   // signal 10
+   OBJECT_ROADSIGN11   = 70,   // signal 11
+   OBJECT_ROADSIGN12   = 71,   // signal 12
+   OBJECT_ROADSIGN13   = 72,   // signal 13
+   OBJECT_ROADSIGN14   = 73,   // signal 14
+   OBJECT_ROADSIGN15   = 74,   // signal 15
+   OBJECT_ROADSIGN16   = 75,   // signal 16
+   OBJECT_ROADSIGN17   = 76,   // signal 17
+   OBJECT_ROADSIGN18   = 77,   // signal 18
+   OBJECT_ROADSIGN19   = 78,   // signal 19
+   OBJECT_ROADSIGN20   = 79,   // signal 20
+   OBJECT_ROADSIGN21   = 80,   // signal 21
+   OBJECT_ROADSIGN22   = 81,   // signal 22
+   OBJECT_ROADSIGN23   = 82,   // signal 23
+   OBJECT_ROADSIGN24   = 83,   // signal 24
+   OBJECT_ROADSIGN25   = 84,   // signal 25
+   OBJECT_ROADSIGN26   = 85,   // signal 26
+   OBJECT_ROADSIGN27   = 86,   // signal 27
+   OBJECT_ROADSIGN28   = 87,   // signal 28
+   OBJECT_ROADSIGN29   = 88,   // signal 29
+   OBJECT_ROADSIGN30   = 89,   // signal 30
+   OBJECT_PUB11        = 100,  // pub
+   OBJECT_PUB12        = 101,  // pub
+   OBJECT_PUB13        = 102,  // pub
+   OBJECT_PUB14        = 103,  // pub
+   OBJECT_PUB21        = 104,  // pub
+   OBJECT_PUB22        = 105,  // pub
+   OBJECT_PUB23        = 106,  // pub
+   OBJECT_PUB24        = 107,  // pub
+   OBJECT_PUB31        = 108,  // pub
+   OBJECT_PUB32        = 109,  // pub
+   OBJECT_PUB33        = 110,  // pub
+   OBJECT_PUB34        = 111,  // pub
+   OBJECT_PUB41        = 112,  // pub
+   OBJECT_PUB42        = 113,  // pub
+   OBJECT_PUB43        = 114,  // pub
+   OBJECT_PUB44        = 115,  // pub
+   OBJECT_PUB51        = 116,  // pub
+   OBJECT_PUB52        = 117,  // pub
+   OBJECT_PUB53        = 118,  // pub
+   OBJECT_PUB54        = 119,  // pub
+   OBJECT_PUB61        = 120,  // pub
+   OBJECT_PUB62        = 121,  // pub
+   OBJECT_PUB63        = 122,  // pub
+   OBJECT_PUB64        = 123,  // pub
+   OBJECT_PUB71        = 124,  // pub
+   OBJECT_PUB72        = 125,  // pub
+   OBJECT_PUB73        = 126,  // pub
+   OBJECT_PUB74        = 127,  // pub
+   OBJECT_PUB81        = 128,  // pub
+   OBJECT_PUB82        = 129,  // pub
+   OBJECT_PUB83        = 130,  // pub
+   OBJECT_PUB84        = 131,  // pub
+   OBJECT_PUB91        = 132,  // pub
+   OBJECT_PUB92        = 133,  // pub
+   OBJECT_PUB93        = 134,  // pub
+   OBJECT_PUB94        = 135,  // pub
+   OBJECT_FRET         = 150,  // transportable
+   OBJECT_STONE        = 151,  // pierre
+   OBJECT_URANIUM      = 152,  // uranium
+   OBJECT_METAL        = 153,  // métal
+   OBJECT_BARREL       = 154,  // tonneau
+   OBJECT_BARRELa      = 155,  // tonneau radioactif
+   OBJECT_ATOMIC       = 156,  // pile atomique
+   OBJECT_BULLET       = 157,  // boulet
+   OBJECT_BBOX         = 158,  // black-box
+   OBJECT_TNT          = 159,  // caisse de TNT
+   OBJECT_MINE         = 160,  // bombe fixe
+   OBJECT_POLE         = 161,  // poteau
+   OBJECT_CONE         = 162,  // cône
+   OBJECT_AQUA         = 163,  // aquarium
+   OBJECT_PIPES        = 164,  // tuyaux
+   OBJECT_GRAVEL       = 165,  // tas de gravier
+   OBJECT_TUB          = 166,  // bac de gravier
+   OBJECT_FIRE         = 170,  // lance d'incendie
+   OBJECT_HELICO       = 171,  // hélicoptère
+   OBJECT_COMPASS      = 172,  // boussole
+   OBJECT_BLITZER      = 173,  // électrocuteur
+   OBJECT_HOOK         = 174,  // crochet
+   OBJECT_TOYS1        = 180,  // jouet 1
+   OBJECT_TOYS2        = 181,  // jouet 2
+   OBJECT_TOYS3        = 182,  // jouet 3
+   OBJECT_TOYS4        = 183,  // jouet 4
+   OBJECT_TOYS5        = 184,  // jouet 5
+   OBJECT_BOMB         = 190,  // bombe transportable
+   OBJECT_WINFIRE      = 191,  // feu d'artifice
+   OBJECT_SHOW         = 192,  // montre un lieu
+   OBJECT_BAG          = 193,  // sac de survie
+   OBJECT_CROSS1       = 195,  // croisement
+   OBJECT_MARK         = 196,  // cible pour bot2
+   OBJECT_CROWN        = 197,  // couronne
+   OBJECT_PLANT0       = 200,  // plante 0
+   OBJECT_PLANT1       = 201,  // plante 1
+   OBJECT_PLANT2       = 202,  // plante 2
+   OBJECT_PLANT3       = 203,  // plante 3
+   OBJECT_PLANT4       = 204,  // plante 4
+   OBJECT_PLANT5       = 205,  // plante 5
+   OBJECT_PLANT6       = 206,  // plante 6
+   OBJECT_PLANT7       = 207,  // plante 7
+   OBJECT_PLANT8       = 208,  // plante 8
+   OBJECT_PLANT9       = 209,  // plante 9
+   OBJECT_PLANT10      = 210,  // plante 10
+   OBJECT_PLANT11      = 211,  // plante 11
+   OBJECT_PLANT12      = 212,  // plante 12
+   OBJECT_PLANT13      = 213,  // plante 13
+   OBJECT_PLANT14      = 214,  // plante 14
+   OBJECT_PLANT15      = 215,  // plante 15
+   OBJECT_PLANT16      = 216,  // plante 16
+   OBJECT_PLANT17      = 217,  // plante 17
+   OBJECT_PLANT18      = 218,  // plante 18
+   OBJECT_PLANT19      = 219,  // plante 19
+   OBJECT_TREE0        = 220,  // arbre 0
+   OBJECT_TREE1        = 221,  // arbre 1
+   OBJECT_TREE2        = 222,  // arbre 2
+   OBJECT_TREE3        = 223,  // arbre 3
+   OBJECT_TREE4        = 224,  // arbre 4
+   OBJECT_TREE5        = 225,  // arbre 5
+   OBJECT_TREE6        = 226,  // arbre 6
+   OBJECT_TREE7        = 227,  // arbre 7
+   OBJECT_TREE8        = 228,  // arbre 8
+   OBJECT_TREE9        = 229,  // arbre 9
+   OBJECT_CAR          = 250,  // voiture
+   OBJECT_MOBILEtg     = 300,  // cible d'exercice
+   OBJECT_MOBILEfb     = 301,  // fireball
+   OBJECT_MOBILEob     = 302,  // orgaball
+   OBJECT_TRAX         = 303,  // trax
+   OBJECT_TRAXf        = 304,  // trax fixe
+   OBJECT_UFO          = 305,  // ufo
+   OBJECT_BOT1         = 320,  // robot 1
+   OBJECT_BOT2         = 321,  // robot 2
+   OBJECT_BOT3         = 322,  // robot 3
+   OBJECT_BOT4         = 323,  // robot 4
+   OBJECT_BOT5         = 324,  // robot 5
+   OBJECT_EVIL1        = 330,  // méchant 1
+   OBJECT_EVIL2        = 331,  // méchant 2
+   OBJECT_EVIL3        = 332,  // méchant 3
+   OBJECT_EVIL4        = 333,  // méchant 4
+   OBJECT_EVIL5        = 334,  // méchant 5
+   OBJECT_CARROT       = 340,  // carotte à suivre
+   OBJECT_STARTER      = 341,  // starter
+   OBJECT_WALKER       = 342,  // marcheur
+   OBJECT_CRAZY        = 343,  // fou
+   OBJECT_GUIDE        = 344,  // guide
+   OBJECT_WAYPOINT     = 350,  // chemin
+   OBJECT_TRAJECT      = 351,  // trajectoire
+   OBJECT_TARGET       = 352,  // cible
+   OBJECT_FLAGb        = 360,  // drapeau bleu
+   OBJECT_FLAGr        = 361,  // drapeau rouge
+   OBJECT_FLAGg        = 362,  // drapeau vert
+   OBJECT_FLAGy        = 363,  // drapeau jaune
+   OBJECT_FLAGv        = 364,  // drapeau violet
+   OBJECT_KEYa         = 370,  // clé a
+   OBJECT_KEYb         = 371,  // clé b
+   OBJECT_KEYc         = 372,  // clé c
+   OBJECT_KEYd         = 373,  // clé d
+   OBJECT_HUMAN        = 400,  // homme
+   OBJECT_TECH         = 402,  // technicien
+   OBJECT_BARRIER0     = 500,  // barrière
+   OBJECT_BARRIER1     = 501,  // barrière
+   OBJECT_BARRIER2     = 502,  // barrière
+   OBJECT_BARRIER3     = 503,  // barrière
+   OBJECT_BARRIER4     = 504,  // barrière
+   OBJECT_BARRIER5     = 505,  // barrière
+   OBJECT_BARRIER6     = 506,  // barrière
+   OBJECT_BARRIER7     = 507,  // barrière
+   OBJECT_BARRIER8     = 508,  // barrière
+   OBJECT_BARRIER9     = 509,  // barrière
+   OBJECT_BARRIER10    = 510,  // barrière
+   OBJECT_BARRIER11    = 511,  // barrière
+   OBJECT_BARRIER12    = 512,  // barrière
+   OBJECT_BARRIER13    = 513,  // barrière
+   OBJECT_BARRIER14    = 514,  // barrière
+   OBJECT_BARRIER15    = 515,  // barrière
+   OBJECT_BARRIER16    = 516,  // barrière
+   OBJECT_BARRIER17    = 517,  // barrière
+   OBJECT_BARRIER18    = 518,  // barrière
+   OBJECT_BARRIER19    = 519,  // barrière
+   OBJECT_BOX1         = 520,  // caisse
+   OBJECT_BOX2         = 521,  // caisse
+   OBJECT_BOX3         = 522,  // caisse
+   OBJECT_BOX4         = 523,  // caisse
+   OBJECT_BOX5         = 524,  // caisse
+   OBJECT_BOX6         = 525,  // caisse
+   OBJECT_BOX7         = 526,  // caisse
+   OBJECT_BOX8         = 527,  // caisse
+   OBJECT_BOX9         = 528,  // caisse
+   OBJECT_BOX10        = 529,  // caisse
+   OBJECT_STONE1       = 530,  // pierre
+   OBJECT_STONE2       = 531,  // pierre
+   OBJECT_STONE3       = 532,  // pierre
+   OBJECT_STONE4       = 533,  // pierre
+   OBJECT_STONE5       = 534,  // pierre
+   OBJECT_STONE6       = 535,  // pierre
+   OBJECT_STONE7       = 536,  // pierre
+   OBJECT_STONE8       = 537,  // pierre
+   OBJECT_STONE9       = 538,  // pierre
+   OBJECT_STONE10      = 539,  // pierre
+   OBJECT_PIECE0       = 540,  // pièce
+   OBJECT_PIECE1       = 541,  // pièce
+   OBJECT_PIECE2       = 542,  // pièce
+   OBJECT_PIECE3       = 543,  // pièce
+   OBJECT_PIECE4       = 544,  // pièce
+   OBJECT_PIECE5       = 545,  // pièce
+   OBJECT_PIECE6       = 546,  // pièce
+   OBJECT_PIECE7       = 547,  // pièce
+   OBJECT_PIECE8       = 548,  // pièce
+   OBJECT_PIECE9       = 549,  // pièce
+   OBJECT_RUINmobilew1 = 700,  // ruine 1
+   OBJECT_RUINmobilew2 = 701,  // ruine 1
+   OBJECT_RUINmobilet1 = 702,  // ruine 2
+   OBJECT_RUINmobilet2 = 703,  // ruine 2
+   OBJECT_RUINmobiler1 = 704,  // ruine 3
+   OBJECT_RUINmobiler2 = 705,  // ruine 3
+   OBJECT_RUINfactory  = 706,  // ruine 4
+   OBJECT_RUINdoor     = 707,  // ruine 5
+   OBJECT_RUINsupport  = 708,  // ruine 6
+   OBJECT_RUINradar    = 709,  // ruine 7
+   OBJECT_RUINconvert  = 710,  // ruine 8
+   OBJECT_RUINbase     = 711,  // ruine 9
+   OBJECT_RUINhead     = 712,  // ruine 10
+   OBJECT_QUARTZ0      = 800,  // quartz 0
+   OBJECT_QUARTZ1      = 801,  // quartz 1
+   OBJECT_QUARTZ2      = 802,  // quartz 2
+   OBJECT_QUARTZ3      = 803,  // quartz 3
+   OBJECT_QUARTZ4      = 804,  // quartz 4
+   OBJECT_QUARTZ5      = 805,  // quartz 5
+   OBJECT_QUARTZ6      = 806,  // quartz 6
+   OBJECT_QUARTZ7      = 807,  // quartz 7
+   OBJECT_QUARTZ8      = 808,  // quartz 8
+   OBJECT_QUARTZ9      = 809,  // quartz 9
+   OBJECT_ROOT0        = 810,  // racine 0
+   OBJECT_ROOT1        = 811,  // racine 1
+   OBJECT_ROOT2        = 812,  // racine 2
+   OBJECT_ROOT3        = 813,  // racine 3
+   OBJECT_ROOT4        = 814,  // racine 4
+   OBJECT_ROOT5        = 815,  // racine 5
+   OBJECT_ROOT6        = 816,  // racine 6
+   OBJECT_ROOT7        = 817,  // racine 7
+   OBJECT_ROOT8        = 818,  // racine 8
+   OBJECT_ROOT9        = 819,  // racine 9
+   OBJECT_SEAWEED0     = 820,  // algue 0
+   OBJECT_SEAWEED1     = 821,  // algue 1
+   OBJECT_SEAWEED2     = 822,  // algue 2
+   OBJECT_SEAWEED3     = 823,  // algue 3
+   OBJECT_SEAWEED4     = 824,  // algue 4
+   OBJECT_SEAWEED5     = 825,  // algue 5
+   OBJECT_SEAWEED6     = 826,  // algue 6
+   OBJECT_SEAWEED7     = 827,  // algue 7
+   OBJECT_SEAWEED8     = 828,  // algue 8
+   OBJECT_SEAWEED9     = 829,  // algue 9
+   OBJECT_MUSHROOM0    = 830,  // champignon 0
+   OBJECT_MUSHROOM1    = 831,  // champignon 1
+   OBJECT_MUSHROOM2    = 832,  // champignon 2
+   OBJECT_MUSHROOM3    = 833,  // champignon 3
+   OBJECT_MUSHROOM4    = 834,  // champignon 4
+   OBJECT_MUSHROOM5    = 835,  // champignon 5
+   OBJECT_MUSHROOM6    = 836,  // champignon 6
+   OBJECT_MUSHROOM7    = 837,  // champignon 7
+   OBJECT_MUSHROOM8    = 838,  // champignon 8
+   OBJECT_MUSHROOM9    = 839,  // champignon 9
    OBJECT_HOME1        = 910,  // maison 1
+   OBJECT_HOME2        = 911,  // maison 2
+   OBJECT_HOME3        = 912,  // maison 3
+   OBJECT_HOME4        = 913,  // maison 4
+   OBJECT_HOME5        = 914,  // maison 5
+   OBJECT_ALIEN1       = 920,  // usine alien
+   OBJECT_ALIEN2       = 921,  // usine alien
+   OBJECT_ALIEN3       = 922,  // usine alien
+   OBJECT_ALIEN4       = 923,  // usine alien
+   OBJECT_ALIEN5       = 924,  // usine alien
+   OBJECT_ALIEN6       = 925,  // usine alien
+   OBJECT_ALIEN7       = 926,  // usine alien
+   OBJECT_ALIEN8       = 927,  // usine alien
+   OBJECT_ALIEN9       = 928,  // usine alien
+   OBJECT_ALIEN10      = 929,  // usine alien
+   OBJECT_INCA1        = 930,  // temple
+   OBJECT_INCA2        = 931,  // temple
+   OBJECT_INCA3        = 932,  // temple
+   OBJECT_INCA4        = 933,  // temple
+   OBJECT_INCA5        = 934,  // temple
+   OBJECT_INCA6        = 935,  // temple
+   OBJECT_INCA7        = 936,  // temple
+   OBJECT_INCA8        = 937,  // temple
+   OBJECT_INCA9        = 938,  // temple
+   OBJECT_INCA10       = 939,  // temple
+   OBJECT_BUILDING1    = 940,  // bâtiment
+   OBJECT_BUILDING2    = 941,  // bâtiment
+   OBJECT_BUILDING3    = 942,  // bâtiment
+   OBJECT_BUILDING4    = 943,  // bâtiment
+   OBJECT_BUILDING5    = 944,  // bâtiment
+   OBJECT_BUILDING6    = 945,  // bâtiment
+   OBJECT_BUILDING7    = 946,  // bâtiment
+   OBJECT_BUILDING8    = 947,  // bâtiment
+   OBJECT_BUILDING9    = 948,  // bâtiment
+   OBJECT_BUILDING10   = 949,  // bâtiment
+   OBJECT_CARCASS1     = 950,  // carcasse
+   OBJECT_CARCASS2     = 951,  // carcasse
+   OBJECT_CARCASS3     = 952,  // carcasse
+   OBJECT_CARCASS4     = 953,  // carcasse
+   OBJECT_CARCASS5     = 954,  // carcasse
+   OBJECT_CARCASS6     = 955,  // carcasse
+   OBJECT_CARCASS7     = 956,  // carcasse
+   OBJECT_CARCASS8     = 957,  // carcasse
+   OBJECT_CARCASS9     = 958,  // carcasse
+   OBJECT_CARCASS10    = 959,  // carcasse
+   OBJECT_ORGA1        = 960,  // organique
+   OBJECT_ORGA2        = 961,  // organique
+   OBJECT_ORGA3        = 962,  // organique
+   OBJECT_ORGA4        = 963,  // organique
+   OBJECT_ORGA5        = 964,  // organique
+   OBJECT_ORGA6        = 965,  // organique
+   OBJECT_ORGA7        = 966,  // organique
+   OBJECT_ORGA8        = 967,  // organique
+   OBJECT_ORGA9        = 968,  // organique
+   OBJECT_ORGA10       = 969,  // organique
    OBJECT_MAX          = 1000,
 };
 
-enum ObjectMaterial
-{
-   OM_METAL            = 0,    // métal
-   OM_PLASTIC          = 1,    // plastique
-   OM_HUMAN            = 2,    // cosmonaute
-   OM_ANIMAL           = 3,    // insecte
-   OM_VEGETAL          = 4,    // plante
-   OM_MINERAL          = 5,    // pierre
-};
-
 typedef struct
 {
    char        bUsed;
@@ -311,22 +426,51 @@ ObjectPart;
 
 typedef struct
 {
-   float       wheelFront;     // position X des roues avant
-   float       wheelBack;      // position X des roues arrières
-   float       wheelLeft;      // position Z des roues gauches
-   float       wheelRight;     // position Z des roues droites
+   D3DVECTOR   wheelFrontPos;  // position roue avant gauche
+   D3DVECTOR   wheelBackPos;   // position roue arrière gauche
+   float       wheelFrontDim;  // rayon roues avants
+   float       wheelBackDim;   // rayon roues arrières
+   float       wheelFrontWidth;// largeur des pneus avants
+   float       wheelBackWidth; // largeur des pneus arrières
+   float       crashFront;     // distance jusqu'à l'avant pour collisions
+   float       crashBack;      // distance jusqu'à l'arrière pour collisions
+   float       crashWidth;     // distance latérale pour collisions
    float       height;         // hauteur normale au-dessus du sol
-   D3DVECTOR   posPower;       // position de la pile
+   float       suspDetect;     // détection suspension
+   float       suspHeight;     // hauteur suspension
+   float       suspFrequency;  // fréquence suspension
+   float       suspAbsorber;   // amortisseur suspension
+   float       rolling;        // tandance au roulis dans les virages
+   float       nicking;        // tandance au nick avant/arrière
+   float       maxRolling;     // angle max de roulis
+   float       maxNicking;     // angle max de nick
+   float       overProp;       // tandance à survirer si propulsion
+   float       overFactor;     // tandance au survirage dans les courbes
+   float       overAngle;      // angle max de survirage
+   float       overMul;        // accentiation de l'effet de survirage
+   float       brakeDir;       // efficacité direction pendant freinage
+   D3DVECTOR   posFret;        // position pour le fret
+   D3DVECTOR   angleFret;      // angle pour le fret
+   D3DVECTOR   antenna;        // pointe de l'antenne
+   D3DVECTOR   lightFL;        // phase avant gauche
+   D3DVECTOR   lightFR;        // phase avant droite
+   D3DVECTOR   lightSL;        // phase stop gauche
+   D3DVECTOR   lightSR;        // phase stop droite
+   D3DVECTOR   lightRL;        // phase recule gauche
+   D3DVECTOR   lightRR;        // phase recule droite
+   D3DVECTOR   camera;         // position caméra en mode CAMERA_ONBOARD
+   float       hookDist;       // distance pour porter avec le crochet
+   float       mass;           // poid du véhicule
+   float       turnSlide;      // glissement si virage rapide
+   float       gripLimit;      // limite d'adérance latérale
+   float       gripSlide;      // tenue de route latérale
+   float       accelLow;       // facteur d'accélération si vitesse nulle
+   float       accelHigh;      // facteur d'accélération si vitesse max
+   float       accelSmooth;    // progresion de l'accélération
+   int         motorSound;     // son pour le moteur
 }
 Character;
 
-typedef struct
-{
-   char        name[20];       // nom de l'information
-   float       value;          // valeur de l'information
-}
-Info;
-
 enum ExploType
 {
    EXPLO_BOUM      = 1,
@@ -334,13 +478,6 @@ enum ExploType
    EXPLO_WATER     = 3,
 };
 
-enum ResetCap
-{
-   RESET_NONE      = 0,
-   RESET_MOVE      = 1,
-   RESET_DELETE    = 2,
-};
-
 enum RadarFilter
 {
    FILTER_NONE         = 0,
@@ -359,7 +496,11 @@ public:
 
    void        DeleteObject(BOOL bAll=FALSE);
    void        Simplify();
-   BOOL        ExploObject(ExploType type, float force, float decay=1.0f);
+   BOOL        ExploObject(ExploType type, float force, D3DVECTOR impact=D3DVECTOR(NAN,NAN,NAN));
+   BOOL        ExploPart(int total, float force);
+   BOOL        DetachPart(int part, D3DVECTOR speed=D3DVECTOR(0.0f, 0.0f, 0.0f));
+   BOOL        DetachPiece(int part, int param, D3DVECTOR speed=D3DVECTOR(0.0f, 0.0f, 0.0f));
+   BOOL        ExploPiece(int part);
 
    BOOL        EventProcess(const Event &event);
    void        UpdateMapping();
@@ -371,6 +512,10 @@ public:
    void        SetObjectParent(int part, int parent);
    void        SetType(ObjectType type);
    ObjectType  RetType();
+   void        SetModel(int model);
+   int         RetModel();
+   void        SetSubModel(int subModel);
+   int         RetSubModel();
    char*       RetName();
    void        SetOption(int option);
    int         RetOption();
@@ -378,26 +523,24 @@ public:
    void        SetID(int id);
    int         RetID();
 
-   BOOL        Write(char *line);
-   BOOL        Read(char *line);
-
    void        SetDrawWorld(BOOL bDraw);
    void        SetDrawFront(BOOL bDraw);
 
-   BOOL        CreateVehicle(D3DVECTOR pos, float angle, ObjectType type, float power, BOOL bTrainer, BOOL bToy);
-   BOOL        CreateInsect(D3DVECTOR pos, float angle, ObjectType type);
-   BOOL        CreateBuilding(D3DVECTOR pos, float angle, float height, ObjectType type, float power=1.0f);
-   BOOL        CreateResource(D3DVECTOR pos, float angle, ObjectType type, float power=1.0f);
-   BOOL        CreateFlag(D3DVECTOR pos, float angle, ObjectType type);
-   BOOL        CreateBarrier(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreatePlant(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateMushroom(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateTeen(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type);
-   BOOL        CreateQuartz(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateRoot(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateHome(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateRuin(D3DVECTOR pos, float angle, float height, ObjectType type);
-   BOOL        CreateApollo(D3DVECTOR pos, float angle, ObjectType type);
+   BOOL        CreateVehicle(D3DVECTOR pos, float angle, float zoom, ObjectType type, int model, int subModel, BOOL bPlumb, BOOL bTrainer);
+   BOOL        CreateBuilding(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateResource(D3DVECTOR pos, float angle, float zoom, ObjectType type, BOOL bPlumb);
+   BOOL        CreateBot(D3DVECTOR pos, float angle, float zoom, ObjectType type, BOOL bPlumb);
+   BOOL        CreateAdditionnal(D3DVECTOR pos, float angle, float zoom, ObjectType type, BOOL bPlumb);
+   BOOL        CreateBarrier(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateBox(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateStone(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreatePiece(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreatePlant(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateMushroom(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateQuartz(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateRoot(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateHome(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
+   BOOL        CreateRuin(D3DVECTOR pos, float angle, float zoom, float height, ObjectType type, BOOL bPlumb);
 
    BOOL        ReadProgram(int rank, char* filename);
    BOOL        WriteProgram(int rank, char* filename);
@@ -408,6 +551,7 @@ public:
 
    void        FlushCrashShere();
    int         CreateCrashSphere(D3DVECTOR pos, float radius, Sound sound, float hardness=0.45f);
+   void        MoveCrashSphere(int rank, D3DVECTOR pos, float radius);
    int         RetCrashSphereTotal();
    BOOL        GetCrashSphere(int rank, D3DVECTOR &pos, float &radius);
    float       RetCrashSphereHardness(int rank);
@@ -417,8 +561,20 @@ public:
    void        GetGlobalSphere(D3DVECTOR &pos, float &radius);
    void        SetJotlerSphere(D3DVECTOR pos, float radius);
    void        GetJotlerSphere(D3DVECTOR &pos, float &radius);
-   void        SetShieldRadius(float radius);
-   float       RetShieldRadius();
+
+   void        FlushCrashLine();
+   void        SetCrashLineHeight(float h);
+   float       RetCrashLineHeight();
+   int         CreateCrashLine(FPOINT pos, Sound sound, float hardness=0.45f, BOOL bNew=FALSE);
+   void        UpdateBBoxCrashLine();
+   int         RetCrashLineTotal();
+   BOOL        GetCrashLine(int rank, FPOINT &pos, BOOL &bNew);
+   float       RetCrashLineHardness(int rank);
+   Sound       RetCrashLineSound(int rank);
+   void        RetCrashLineBBox(FPOINT &min, FPOINT &max);
+   BOOL        IsCrashLineFusion();
+   void        CrashLineFusion();
+   BOOL        IsOccludeCamera(const D3DVECTOR &eye, const D3DVECTOR &look);
 
    void        SetFloorHeight(float height);
    void        FloorAdjust();
@@ -427,6 +583,8 @@ public:
    D3DVECTOR   RetLinVibration();
    void        SetCirVibration(D3DVECTOR dir);
    D3DVECTOR   RetCirVibration();
+   void        SetCirChoc(D3DVECTOR dir);
+   D3DVECTOR   RetCirChoc();
    void        SetInclinaison(D3DVECTOR dir);
    D3DVECTOR   RetInclinaison();
 
@@ -455,23 +613,6 @@ public:
    void        SetTrainer(BOOL bEnable);
    BOOL        RetTrainer();
 
-   void        SetToy(BOOL bEnable);
-   BOOL        RetToy();
-
-   void        SetManual(BOOL bManual);
-   BOOL        RetManual();
-
-   void        SetResetCap(ResetCap cap);
-   ResetCap    RetResetCap();
-   void        SetResetBusy(BOOL bBusy);
-   BOOL        RetResetBusy();
-   void        SetResetPosition(const D3DVECTOR &pos);
-   D3DVECTOR   RetResetPosition();
-   void        SetResetAngle(const D3DVECTOR &angle);
-   D3DVECTOR   RetResetAngle();
-   void        SetResetRun(int run);
-   int         RetResetRun();
-
    void        SetMasterParticule(int part, int parti);
    int         RetMasterParticule(int part);
 
@@ -484,16 +625,6 @@ public:
    void        SetTruckPart(int part);
    int         RetTruckPart();
 
-   void        InfoFlush();
-   void        DeleteInfo(int rank);
-   void        SetInfo(int rank, Info info);
-   Info        RetInfo(int rank);
-   int         RetInfoTotal();
-   void        SetInfoReturn(float value);
-   float       RetInfoReturn();
-   void        SetInfoUpdate(BOOL bUpdate);
-   BOOL        RetInfoUpdate();
-
    BOOL        SetCmdLine(int rank, float value);
    float       RetCmdLine(int rank);
 
@@ -510,23 +641,15 @@ public:
 
    float       RetAbsTime();
 
-   void        SetEnergy(float level);
-   float       RetEnergy();
-
-   void        SetCapacity(float capacity);
-   float       RetCapacity();
-
    void        SetShield(float level);
    float       RetShield();
 
-   void        SetRange(float delay);
-   float       RetRange();
+   void        SetBurnShield(float level);
+   float       RetBurnShield();
 
    void        SetTransparency(float value);
    float       RetTransparency();
 
-   ObjectMaterial RetMaterial();
-
    void        SetGadget(BOOL bMode);
    BOOL        RetGadget();
 
@@ -538,12 +661,6 @@ public:
 
    BOOL        JostleObject(float force);
 
-   void        StartDetectEffect(CObject *target, BOOL bFound);
-
-   void        SetVirusMode(BOOL bEnable);
-   BOOL        RetVirusMode();
-   float       RetVirusTime();
-
    void        SetCameraType(CameraType type);
    CameraType  RetCameraType();
    void        SetCameraDist(float dist);
@@ -569,13 +686,11 @@ public:
    void        SetEnable(BOOL bEnable);
    BOOL        RetEnable();
 
-   void        SetCheckToken(BOOL bMode);
-   BOOL        RetCheckToken();
+   void        SetGhost(BOOL bGhost);
+   BOOL        RetGhost();
 
-   void        SetProxyActivate(BOOL bActivate);
-   BOOL        RetProxyActivate();
-   void        SetProxyDistance(float distance);
-   float       RetProxyDistance();
+   void        SetGround(BOOL bGround);
+   BOOL        RetGround();
 
    void        SetMagnifyDamage(float factor);
    float       RetMagnifyDamage();
@@ -587,8 +702,8 @@ public:
    BOOL        RetExplo();
    void        SetLock(BOOL bLock);
    BOOL        RetLock();
-   void        SetCargo(BOOL bCargo);
-   BOOL        RetCargo();
+   void        SetStarting(BOOL bStarting);
+   BOOL        RetStarting();
    void        SetBurn(BOOL bBurn);
    BOOL        RetBurn();
    void        SetDead(BOOL bDead);
@@ -596,13 +711,10 @@ public:
    BOOL        RetRuin();
    BOOL        RetActif();
 
-   void        SetGunGoalV(float gunGoal);
-   void        SetGunGoalH(float gunGoal);
-   float       RetGunGoalV();
-   float       RetGunGoalH();
-
-   BOOL        StartShowLimit();
-   void        StopShowLimit();
+   void        SetPassCounter(int counter);
+   int         RetPassCounter();
+   void        SetRankCounter(int rank);
+   int         RetRankCounter();
 
    BOOL        IsProgram();
    void        CreateSelectParticule();
@@ -621,32 +733,27 @@ public:
 
    BOOL        GetTooltipName(char* name);
 
-   void        AddDeselList(CObject* pObj);
-   CObject*    SubDeselList();
-   void        DeleteDeselList(CObject* pObj);
-
    BOOL        CreateShadowCircle(float radius, float intensity, D3DShadowType type=D3DSHADOWNORM);
    BOOL        CreateShadowLight(float height, D3DCOLORVALUE color);
    BOOL        CreateEffectLight(float height, D3DCOLORVALUE color);
 
    void        FlatParent();
+   BOOL        FlatParent(int part);
 
-   BOOL        RetTraceDown();
-   void        SetTraceDown(BOOL bDown);
-   int         RetTraceColor();
-   void        SetTraceColor(int color);
-   float       RetTraceWidth();
-   void        SetTraceWidth(float width);
+   void        SetRecorderRecordMode(BOOL bRecord);
+   BOOL        RetRecorderRecordMode();
+   void        SetRecorderPlayMode(BOOL bPlay);
+   BOOL        RetRecorderPlayMode();
+   void        SetRecorder(CRecorder* recorder);
+   CRecorder*  RetRecorder();
 
 protected:
    BOOL        EventFrame(const Event &event);
-   void        VirusFrame(float rTime);
    void        PartiFrame(float rTime);
    void        CreateOtherObject(ObjectType type);
    void        InitPart(int part);
    void        UpdateTotalPart();
    int         SearchDescendant(int parent, int n);
-   void        UpdateEnergyMapping();
    BOOL        UpdateTransformObject(int part, BOOL bForceUpdate);
    BOOL        UpdateTransformObject();
    void        UpdateSelectParticule();
@@ -670,64 +777,51 @@ protected:
    CScript*        m_runScript;
 
    ObjectType  m_type;             // OBJECT_*
+   int         m_model;            // modèle de voiture
+   int         m_subModel;         // modèle de la peinture
    int         m_id;               // identificateur unique
-   char        m_name[50];         // nom de l'objet
    Character   m_character;        // caractéristiques
    int         m_option;           // option
-   int         m_partiReactor;     // numéro de la particule du réacteur
    int         m_shadowLight;      // numéro de la lumière de l'ombre
    float       m_shadowHeight;     // hauteur de la lumière de l'ombre
    int         m_effectLight;      // numéro de la lumière des effets
    float       m_effectHeight;     // hauteur de la lumière des effets
    D3DVECTOR   m_linVibration;     // vibration linéaire
    D3DVECTOR   m_cirVibration;     // vibration circulaire
+   D3DVECTOR   m_cirChoc;          // rotation suite à un choc
    D3DVECTOR   m_inclinaison;      // inclinaison
    CObject*    m_power;            // pile utilisée par le véhicule
    CObject*    m_fret;             // objet transporté
    CObject*    m_truck;            // objet portant celui-ci
    int         m_truckLink;        // partie
-   float       m_energy;           // énergie contenue (si pile)
-   float       m_lastEnergy;
-   float       m_capacity;         // capacité (si pile)
    float       m_shield;           // bouclier
-   float       m_range;            // autonomie de vol
+   float       m_burnShield;       // bouclier de résistance au feu
    float       m_transparency;     // transparence (0..1)
-   int         m_material;         // matière (0..n)
    float       m_aTime;
    float       m_shotTime;         // temps depuis dernier coup
-   BOOL        m_bVirusMode;       // virus enclanché/déclanché
-   float       m_virusTime;        // temps de vie du virus
-   float       m_lastVirusParticule;
    float       m_lastParticule;
    BOOL        m_bHilite;
    BOOL        m_bSelect;          // objet sélectionné
    BOOL        m_bSelectable;      // objet sélectionnable
-   BOOL        m_bCheckToken;      // objet avec tokens vérifiés
    BOOL        m_bVisible;         // objet actif mais indétectable
    BOOL        m_bEnable;          // objet mort
-   BOOL        m_bProxyActivate;   // objet activé si proche
    BOOL        m_bGadget;          // objet non indispensable
    BOOL        m_bLock;
+   BOOL        m_bStarting;
    BOOL        m_bExplo;
-   BOOL        m_bCargo;
    BOOL        m_bBurn;
    BOOL        m_bDead;
    BOOL        m_bFlat;
    BOOL        m_bTrainer;         // véhicule d'entraînement (sans télécommande)
-   BOOL        m_bToy;             // jouet à clé
-   BOOL        m_bManual;          // commandes manuelles (Scribbler)
    BOOL        m_bFixed;
    BOOL        m_bClip;
-   BOOL        m_bShowLimit;
-   float       m_showLimitRadius;
-   float       m_gunGoalV;
-   float       m_gunGoalH;
+   BOOL        m_bGhost;
+   BOOL        m_bGround;
    CameraType  m_cameraType;
    float       m_cameraDist;
    BOOL        m_bCameraLock;
    int         m_defRank;
    float       m_magnifyDamage;
-   float       m_proxyDistance;
    float       m_param;
 
    int         m_crashSphereUsed;  // nb de sphères utilisées
@@ -739,28 +833,29 @@ protected:
    float       m_globalSphereRadius;
    D3DVECTOR   m_jotlerSpherePos;
    float       m_jotlerSphereRadius;
-   float       m_shieldRadius;
+
+   int         m_crashLineUsed;    // nb de lignes utilisées
+   FPOINT      m_crashLinePos[MAXCRASHLINE];
+   char        m_crashLineNew[MAXCRASHLINE];
+   float       m_crashLineHardness[MAXCRASHLINE];
+   Sound       m_crashLineSound[MAXCRASHLINE];
+   FPOINT      m_crashLineMin;
+   FPOINT      m_crashLineMax;
+   float       m_crashLineHeight;
 
    int         m_totalPart;
    ObjectPart  m_objectPart[OBJECTMAXPART];
 
-   int         m_totalDesectList;
-   CObject*    m_objectDeselectList[OBJECTMAXDESELLIST];
+   int         m_partiSel[10];
 
-   int         m_partiSel[4];
-
-   ResetCap    m_resetCap;
-   BOOL        m_bResetBusy;
-   D3DVECTOR   m_resetPosition;
-   D3DVECTOR   m_resetAngle;
-   int         m_resetRun;
-
-   int         m_infoTotal;
-   Info        m_info[OBJECTMAXINFO];
-   float       m_infoReturn;
-   BOOL        m_bInfoUpdate;
+   int         m_passCounter;
+   int         m_rankCounter;
 
    float       m_cmdLine[OBJECTMAXCMDLINE];
+
+   BOOL        m_bRecorderRecord;
+   BOOL        m_bRecorderPlay;
+   CRecorder*  m_recorder;
 };
 
 
