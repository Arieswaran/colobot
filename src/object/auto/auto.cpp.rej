diff a/src/object/auto/auto.cpp b/src/object/auto/auto.cpp	(rejected hunks)
@@ -17,7 +17,6 @@
 #include "particule.h"
 #include "light.h"
 #include "terrain.h"
-#include "water.h"
 #include "cloud.h"
 #include "planet.h"
 #include "blitz.h"
@@ -31,8 +30,8 @@
 #include "gauge.h"
 #include "window.h"
 #include "robotmain.h"
-#include "displaytext.h"
 #include "sound.h"
+#include "displaytext.h"
 #include "cmdtoken.h"
 #include "auto.h"
 
@@ -52,7 +51,6 @@ CAuto::CAuto(CInstanceManager* iMan, CObject* object)
    m_particule   = (CParticule*)m_iMan->SearchInstance(CLASS_PARTICULE);
    m_light       = (CLight*)m_iMan->SearchInstance(CLASS_LIGHT);
    m_terrain     = (CTerrain*)m_iMan->SearchInstance(CLASS_TERRAIN);
-   m_water       = (CWater*)m_iMan->SearchInstance(CLASS_WATER);
    m_cloud       = (CCloud*)m_iMan->SearchInstance(CLASS_CLOUD);
    m_planet      = (CPlanet*)m_iMan->SearchInstance(CLASS_PLANET);
    m_blitz       = (CBlitz*)m_iMan->SearchInstance(CLASS_BLITZ);
@@ -68,6 +66,9 @@ CAuto::CAuto(CInstanceManager* iMan, CObject* object)
    m_bMotor = FALSE;
    m_progressTime = 0.0f;
    m_progressTotal = 1.0f;
+   m_actionType = -1;
+   m_actionTime = 0.0f;
+   m_actionProgress = 0.0f;
 
    Init();
 }
@@ -131,6 +132,10 @@ BOOL CAuto::EventProcess(const Event &event)
         !m_engine->RetPause() )
    {
        m_time += event.rTime;
+
+       m_actionProgress += event.rTime*m_actionTime;
+       if ( m_actionProgress > 1.0f )  m_actionProgress = 1.0f;
+
        UpdateInterface(event.rTime);
    }
 
@@ -157,181 +162,23 @@ BOOL CAuto::Abort()
 }
 
 
-// Crée toute l'interface lorsque l'objet est sélectionné.
-
-BOOL CAuto::CreateInterface(BOOL bSelect)
-{
-   CWindow*    pw;
-   FPOINT      pos, dim, ddim;
-   float       ox, oy, sx, sy;
-   char        name[100];
-
-   pw = (CWindow*)m_interface->SearchControl(EVENT_WINDOW0);
-   if ( pw != 0 )
-   {
-       pw->Flush();  // détruit les boutons de la fenêtre
-       m_interface->DeleteControl(EVENT_WINDOW0);  // détruit la fenêtre
-   }
-
-   if ( !bSelect )  return TRUE;
-
-   pos.x = 0.0f;
-   pos.y = 0.0f;
-   dim.x = 540.0f/640.0f;
-//?    dim.y = 70.0f/480.0f;
-   dim.y = 86.0f/480.0f;
-   m_interface->CreateWindows(pos, dim, 3, EVENT_WINDOW0);
-   pw = (CWindow*)m_interface->SearchControl(EVENT_WINDOW0);
-   if ( pw == 0 )  return FALSE;
-
-   m_object->GetTooltipName(name);
-   pos.x = 0.0f;
-   pos.y = 64.0f/480.0f;
-   ddim.x = 540.0f/640.0f;
-   ddim.y = 16.0f/480.0f;
-   pw->CreateLabel(pos, ddim, 0, EVENT_LABEL0, name);
-
-   dim.x = 33.0f/640.0f;
-   dim.y = 33.0f/480.0f;
-   ox = 3.0f/640.0f;
-   oy = 3.0f/480.0f;
-   sx = 33.0f/640.0f;
-   sy = 33.0f/480.0f;
-
-   pos.x = ox+sx*7.0f;
-   pos.y = oy+sy*0.6f;
-   ddim.x = 160.0f/640.0f;
-   ddim.y =  26.0f/480.0f;
-   pw->CreateGauge(pos, ddim, 0, EVENT_OBJECT_GPROGRESS);
-
-   if ( m_type != OBJECT_BASE   &&
-        m_type != OBJECT_SAFE   &&
-        m_type != OBJECT_HUSTON )
-   {
-       pos.x = ox+sx*2.1f;
-       pos.y = oy+sy*0;
-       ddim.x = dim.x*0.6f;
-       ddim.y = dim.y*0.6f;
-       pw->CreateButton(pos, ddim, 12, EVENT_OBJECT_DELETE);
-   }
-
-#if 0
-   pos.x = ox+sx*12.4f;
-   pos.y = oy+sy*1;
-   pw->CreateButton(pos, dim, 63, EVENT_OBJECT_BHELP);
-
-   pos.x = ox+sx*12.4f;
-   pos.y = oy+sy*0;
-   pw->CreateButton(pos, dim, 19, EVENT_OBJECT_HELP);
-
-   if ( m_main->RetSceneSoluce() )
-   {
-       pos.x = ox+sx*13.4f;
-       pos.y = oy+sy*1;
-       pw->CreateButton(pos, dim, 20, EVENT_OBJECT_SOLUCE);
-   }
-
-   pos.x = ox+sx*13.4f;
-   pos.y = oy+sy*0;
-   pw->CreateButton(pos, dim, 10, EVENT_OBJECT_DESELECT);
-#else
-   pos.x = ox+sx*12.3f;
-   pos.y = oy+sy*-0.1f;
-   ddim.x = dim.x*1.0f;
-   ddim.y = dim.y*2.1f;
-   pw->CreateGroup(pos, ddim, 20, EVENT_NULL);  // fond bleu uni
-
-   pos.x = ox+sx*12.3f;
-   pos.y = oy+sy*1;
-   pw->CreateGroup(pos, dim, 19, EVENT_NULL);  // signe SatCom
-
-   pos.x = ox+sx*12.4f;
-   pos.y = oy+sy*0.5f;
-   ddim.x = dim.x*0.8f;
-   ddim.y = dim.y*0.5f;
-   pw->CreateButton(pos, ddim, 18, EVENT_OBJECT_BHELP);
-   pos.y = oy+sy*0.0f;
-   pw->CreateButton(pos, ddim, 19, EVENT_OBJECT_HELP);
-
-   pos.x = ox+sx*13.4f;
-   pos.y = oy+sy*0;
-   pw->CreateButton(pos, dim, 10, EVENT_OBJECT_DESELECT);
-#endif
-
-   pos.x = ox+sx*14.9f;
-   pos.y = oy+sy*0;
-   ddim.x = 14.0f/640.0f;
-   ddim.y = 66.0f/480.0f;
-   pw->CreateGauge(pos, ddim, 3, EVENT_OBJECT_GSHIELD);
-
-   UpdateInterface();
-   m_lastUpdateTime = 0.0f;
-   UpdateInterface(0.0f);
-
-   return TRUE;
-}
-
-// Modifie l'état d'un bouton de l'interface.
-
-void CAuto::CheckInterface(CWindow *pw, EventMsg event, BOOL bState)
-{
-   CControl*   control;
-
-   control = pw->SearchControl(event);
-   if ( control == 0 )  return;
-
-   control->SetState(STATE_CHECK, bState);
-}
-
-// Modifie l'état d'un bouton de l'interface.
-
-void CAuto::EnableInterface(CWindow *pw, EventMsg event, BOOL bState)
-{
-   CControl*   control;
-       
-   control = pw->SearchControl(event);
-   if ( control == 0 )  return;
-
-   control->SetState(STATE_ENABLE, bState);
-}
+// Démarre une action.
 
-// Modifie l'état d'un bouton de l'interface.
-
-void CAuto::VisibleInterface(CWindow *pw, EventMsg event, BOOL bState)
+Error CAuto::SetAction(int action, float time)
 {
-   CControl*   control;
-       
-   control = pw->SearchControl(event);
-   if ( control == 0 )  return;
-
-   control->SetState(STATE_VISIBLE, bState);
+   m_actionType = action;
+   m_actionTime = 1.0f/time;
+   m_actionProgress = 0.0f;
+   return ERR_OK;
 }
 
-// Modifie l'état d'un bouton de l'interface.
+// Retourne l'action en cours.
 
-void CAuto::DeadInterface(CWindow *pw, EventMsg event, BOOL bState)
+int CAuto::RetAction()
 {
-   CControl*   control;
-       
-   control = pw->SearchControl(event);
-   if ( control == 0 )  return;
-
-   control->SetState(STATE_DEAD, !bState);
+   return m_actionType;
 }
 
-// Met à jour l'état de tous les boutons de l'interface.
-
-void CAuto::UpdateInterface()
-{
-   CWindow*    pw;
-
-   if ( !m_object->RetSelect() )  return;
-
-   pw = (CWindow*)m_interface->SearchControl(EVENT_WINDOW0);
-   if ( pw == 0 )  return;
-
-   VisibleInterface(pw, EVENT_OBJECT_GPROGRESS, m_bBusy);
-}
 
 // Met à jour l'état de tous les boutons de l'interface,
 // suite au temps qui s'écoule ...
@@ -349,7 +196,7 @@ void CAuto::UpdateInterface(float rTime)
    pw = (CWindow*)m_interface->SearchControl(EVENT_WINDOW0);
    if ( pw == 0 )  return;
 
-   pg = (CGauge*)pw->SearchControl(EVENT_OBJECT_GSHIELD);
+   pg = (CGauge*)pw->SearchControl(EVENT_OBJECT_GLEVEL1);
    if ( pg != 0 )
    {
        pg->SetLevel(m_object->RetShield());
@@ -408,40 +255,3 @@ void CAuto::SetMotor(BOOL bMotor)
 }
 
 
-// Sauve tous les paramètres de l'automate.
-
-BOOL CAuto::Write(char *line)
-{
-   char    name[100];
-
-   sprintf(name, " aType=%d", m_type);
-   strcat(line, name);
-
-   sprintf(name, " aBusy=%d", m_bBusy);
-   strcat(line, name);
-
-   sprintf(name, " aTime=%.2f", m_time);
-   strcat(line, name);
-
-   sprintf(name, " aProgressTime=%.2f", m_progressTime);
-   strcat(line, name);
-
-   sprintf(name, " aProgressTotal=%.2f", m_progressTotal);
-   strcat(line, name);
-
-   return FALSE;
-}
-
-// Restitue tous les paramètres de l'automate.
-
-BOOL CAuto::Read(char *line)
-{
-   m_type = (ObjectType)OpInt(line, "aType", OBJECT_NULL);
-   m_bBusy = OpInt(line, "aBusy", 0);
-   m_time = OpFloat(line, "aTime", 0.0f);
-   m_progressTime = OpFloat(line, "aProgressTime", 0.0f);
-   m_progressTotal = OpFloat(line, "aProgressTotal", 0.0f);
-
-   return FALSE;
-}
-
